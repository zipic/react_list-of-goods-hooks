{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","goodsArray","sort","a","b","ALPHABETICALLY","localeCompare","LENGTH","length","reverse","sortBy","className","onClick","type","cn","undefined","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,iBAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3BR,SAAgBC,EACdL,EAAiCE,GACjC,IAAMI,EAAU,YAAOD,GAmBvB,OAjBIL,GACFM,EAAWC,MAAK,SAACC,EAAGC,GAClB,OAAQT,GACN,KAAKJ,EAAUc,eACb,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAAUgB,OACb,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAKXX,GACFI,EAAWQ,UAGNR,EAMaS,CAAOlB,EAAiBG,EAAWE,GAEvD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaL,EAAUc,iBACtCQ,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYnB,IAAcJ,EAAUc,iBAJxC,iCAUA,wBACEO,QAAS,kBAAMhB,EAAaL,EAAUgB,SACtCM,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYnB,IAAcJ,EAAUgB,SAJxC,4BAUA,wBACEK,QAAS,kBAAMd,GAAeD,IAC9BgB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAajB,IAJjB,sBAUEF,GAAaE,IACb,wBACEgB,KAAK,SACLF,UAAU,4BACVC,QAAS,WACPd,GAAc,GACdF,OAAamB,IALjB,sBAaJ,6BACGhB,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef605ea2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  ALPHABETICALLY = 'ALPHABETICALLY',\n  LENGTH = 'LENGTH',\n}\n\nfunction sortBy(goods:string[],\n  sortField:SortField | undefined, isReversed:boolean) {\n  const goodsArray = [...goods];\n\n  if (sortField) {\n    goodsArray.sort((a, b) => {\n      switch (sortField) {\n        case SortField.ALPHABETICALLY:\n          return a.localeCompare(b);\n        case SortField.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    goodsArray.reverse();\n  }\n\n  return goodsArray;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortField>();\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = sortBy(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortField.ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortField.ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortField.LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortField.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortField(undefined);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}